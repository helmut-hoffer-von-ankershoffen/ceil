local {{ ansible_default_ipv4.address }}
dev tun 
proto {{ openvpn.protocol }}
port {{ openvpn.port }}
ca /etc/openvpn/easy-rsa/keys/ca.crt 
cert /etc/openvpn/easy-rsa/keys/{{ ansible_hostname }}.crt
key /etc/openvpn/easy-rsa/keys/{{ ansible_hostname }}.key
dh /etc/openvpn/easy-rsa/keys/dh{{ certificate.key_size }}.pem
server {{ openvpn.server_subnet }} {{ openvpn.server_netmask }} 
# server and remote endpoints 
ifconfig {{ openvpn.server_tun0 }} {{ openvpn.server_tun0_ptp }}
# Add route to Client routing table for the OpenVPN Server 
push "route {{ openvpn.server_tun0 }} 255.255.255.255" 
# Add route to Client routing table for the OpenVPN Subnet 
push "route {{ openvpn.server_subnet }} {{ openvpn.server_netmask }}" 
# your local subnet 
push "route {{ ansible_default_ipv4.address }} {{ openvpn.local_netmask }}"
# Set primary domain name server address to the SOHO Router 
# If your router does not do DNS, you can use Google DNS 8.8.8.8 
push "dhcp-option DNS {{ openvpn.dns_ip }}"
# Override the Client default gateway by using 0.0.0.0/1 and 
# 128.0.0.0/1 rather than 0.0.0.0/0. This has the benefit of 
# overriding but not wiping out the original default gateway. 
push "redirect-gateway def1" 
client-to-client 
duplicate-cn 
keepalive 10 120 
tls-auth /etc/openvpn/easy-rsa/keys/ta.key 0 
cipher AES-128-CBC 
comp-lzo 
user nobody 
group nogroup 
persist-key 
persist-tun 
status /var/log/openvpn-status.log 20 
log /var/log/openvpn.log 
verb 1
