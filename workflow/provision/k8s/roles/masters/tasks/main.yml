---

- name: "Firewall: allow k8s API on 6443/tcp"
  ufw:
    rule: allow
    direction: in
    port: '6443'
    proto: tcp
    state: enabled

- name: "Firewall: allow weave networking on 6783/udp"
  ufw:
    rule: allow
    direction: in
    port: '6783'
    proto: udp
    state: enabled

- name: "Firewall: allow weave networking on 6784/udp"
  ufw:
    rule: allow
    direction: in
    port: '6784'
    proto: udp
    state: enabled

- name: "Firewall: allow weave networking on 6783/tcp"
  ufw:
    rule: allow
    direction: in
    port: '6783'
    proto: tcp
    state: enabled

- name: "kubeadm init"
  shell: kubeadm init --ignore-preflight-errors=all --apiserver-advertise-address={{ ansible_host }} --token={{ kubernetes_token }} --kubernetes-version={{ kubernetes_version }} --pod-network-cidr={{ kubernetes_podnet }}
  register: kubeadm_init
  when: kubeadm_reset is succeeded
  become: true

- name: "Create config directory"
  file:
    path: /root/.kube/
    state: directory
    owner: root
    group: root
    mode: 0755
  become: true

- name: "Copy admin.conf to config directory of root"
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /root/.kube/config
    owner: root
    group: root
    mode: 0755
    remote_src: yes
    backup: yes
  become: true
  when: kubeadm_init

- name: "Copy config to ~/.kube/config"
  fetch:
    src: /root/.kube/config
    dest: ~/.kube/config
    flat: yes

- name: "Join cluster"
  shell: kubeadm join --ignore-preflight-errors=all --token {{ kubernetes_token }} {{ hostvars[groups['master'][0]].ansible_host }}:6443 --discovery-token-unsafe-skip-ca-verification
  when: kubeadm_reset is succeeded
  become: true
  register: kubeadm_join

- name: "Install Weave networking"
  shell: "kubectl apply -f \"https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')\""
  become: true

- name: "Copy resolv.k8s.conf for k8s master that is router as well"
  become: true
  template:
    src: resolv.k8s.conf
    dest: /etc/resolv.k8s.conf
  when: inventory_hostname == groups["master"][0]

- name: "Let kubelet on master use resolv.k8s.conf to avoid CoreDNS crash on detecting loop with dnsmasq in place"
  become: true
  lineinfile:
    dest: /var/lib/kubelet/config.yaml
    regexp: 'resolvConf:.+$'
    line: "resolvConf: /etc/resolv.k8s.conf"
    state: present
  when: inventory_hostname == groups["master"][0]

- name: "Poke kubelet"
  systemd:
    name: kubelet
    state: restarted
    daemon_reload: yes
    enabled: yes
  register: kubelet_poke

