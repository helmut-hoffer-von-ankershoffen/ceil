---

- name: "Check all hosts accessible"
  assert:
    that:
    - ansible_play_hosts == ansible_play_hosts_all

- name: "Ensure hostname set"
  hostname:
    name: "{{ inventory_hostname }}"
  when: not inventory_hostname is match('(\d{1,3}\.){3}\d{1,3}')
  register: hostname

- name: "apt-get update"
  apt:
    update_cache: yes
    autoclean: yes
    autoremove: yes
    cache_valid_time: 86400

- name: "Install apt tools"
  apt:
    state: latest
    pkg:
      - aptitude
      - apt-transport-https

- name: "apt-get update"
  apt:
    update_cache: yes
    autoclean: yes
    autoremove: yes
    cache_valid_time: 86400

- name: "apt-get upgrade"
  apt:
    upgrade: full
  register: upgrade

- name: "Add apt signing key from official docker repo"
  apt_key:
    url: https://download.docker.com/linux/debian/gpg
    state: present

- name: "Add docker official repository for Debian Stretch"
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/debian stretch stable
    state: present

- name: "Index new repo into the cache"
  become: yes
  apt:
    name: "*"
    state: latest
    update_cache: yes
    force_apt_get: yes

- name: "Install prerequisites"
  apt:
    state: latest
    pkg:
    - net-tools
    - sudo
    - sendmail-bin
    - python-setuptools
    - python-pip
    - ntp
    - telnet
    - ca-certificates
    - curl
    - gnupg2
    - software-properties-common
    - ipvsadm
    - docker-ce
    - htop

- name: Install libraries
  pip:
    name:
      - docker
      - docker-compose

- name: "Reboot"
  shell: sleep 5 && sync && shutdown -r now "Ansible Reboot"
  async: 1
  poll: 0
  ignore_errors: true
  when: hostname.changed or upgrade.changed
  register: rebooted

- name: "Wait for up"
  wait_for_connection:
    delay: 5
    connect_timeout: 5
    sleep: 1
    timeout: 240
  when: rebooted.changed
